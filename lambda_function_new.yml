AWSTemplateFormatVersion: '2010-09-09'
Description: "InstaGO prod L2T layer lead meeting invoke CFT test lambda deployment"
Parameters:
  LambdaFunctionName: 
    Type: String
    Description: Name of the Lambda Function to be created
    Default: lambda_function_new
  tagenvironment:
    Type: String
    Description: This is tagenvironment
    Default: Production 
  sourcecodebucketname:
    Type: String
    Description: sourcecodebucketname
    Default: github-actions-1-dmo
  sourcecodebucketkey:
    Type: String
    Description: sourcecodebucketkey
    Default: lambda_2/lambda_function_new.zip	
Resources:
  MyRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "lambda.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      RoleName: !Join 
            - ''
            - - !Ref LambdaFunctionName
              - _LambdaRole
      Tags:
        - Key: Project
          Value: InstaGO
        - Key: Name
          Value: !Join
            - ''
            - - !Ref LambdaFunctionName
              - _LambdaRole
        - Key: Environment
          Value: !Ref tagenvironment
        - Key: Owner
          Value: Deepak
  MyRolePolicies: 
    Type: "AWS::IAM::Policy"
    DependsOn: MyRole
    Properties: 
      PolicyName: !Join 
            - ''
            - - !Ref LambdaFunctionName
              - _LambdaRole_Policy
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - ##DyanmoDB Access
            Sid: VisualEditor1
            Effect: Allow
            Action:
              - dynamodb:PutItem			  
              - dynamodb:UpdateItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:BatchGetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
              - dynamodb:Query
              - dynamodb:DescribeGlobalTableSettings
              - dynamodb:DescribeGlobalTable  
            Resource:
              - arn:aws:dynamodb:ap-south-1:251899213637:table/InstaGO_prod_l1_lead_details*
              - arn:aws:dynamodb:ap-south-1:251899213637:table/InstaGO_prod_l2_meeting_details*
          - ##DyanmoDB Stream Access
            Sid: VisualEditor2
            Effect: Allow
            Action:
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:DescribeStream
              - dynamodb:ListStreams
            Resource:
              - arn:aws:dynamodb:ap-south-1:251899213637:table/InstaGO_prod_l1_lead_meeting*
          - ##CloudWatch access
            Sid: VisualEditor3           
            Action: cloudwatch:*
            Effect: Allow
            Resource: "*"
          - ## CloudWatch Logs access
            Sid: VisualEditor4
            Effect: Allow
            Action:
              - logs:List*
              - cloudwatch:List*			  
              - logs:List*
              - logs:GetLogRecord
              - logs:DescribeLogStreams
              - logs:DescribeSubscriptionFilters
              - logs:StartQuery
              - logs:DescribeMetricFilters
              - logs:GetLogDelivery
              - logs:CreateLogStream
              - logs:TagLogGroup
              - logs:GetLogEvents
              - logs:FilterLogEvents
              - logs:DescribeResourcePolicies
              - logs:DescribeDestinations
              - logs:DescribeQueries
              - logs:UntagLogGroup
              - logs:DescribeLogGroups
              - logs:StopQuery
              - logs:TestMetricFilter
              - logs:PutLogEvents
              - logs:CreateLogGroup
              - logs:DescribeExportTasks
              - logs:GetQueryResults
              - logs:PutRetentionPolicy
              - logs:GetLogGroupFields
            Resource: "*" 
      Roles: 
        - 
          Ref: "MyRole"
  MyLambda:
    Type: AWS::Lambda::Function
    DependsOn: MyRolePolicies
    DeletionPolicy: Retain    
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      Role: {"Fn::GetAtt" : ["MyRole", "Arn"] }       
      Description: ''
      MemorySize: 128
      Timeout: 5
      Code: 
        S3Bucket: !Ref sourcecodebucketname
        S3Key: !Ref sourcecodebucketkey
      Tags:
        - Key: Project
          Value: InstaGO
        - Key: Name
          Value: !Ref LambdaFunctionName
        - Key: Environment
          Value: !Ref tagenvironment
        - Key: Owner
          Value: Deepak_Pawar
        - Key: Prod
          Value: ""
        - Key: InstaGO
          Value: ""
